#include <stdio.h>
#include <stdlib.h>

// Define the structure for a node in the linked list
struct Node {
    int data;
    struct Node* next;
};

// Define the structure for the queue
struct Queue {
    struct Node* front;
    struct Node* rear;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode;
    newNode = (struct Node*)malloc(sizeof(struct Node));
    if (newNode == NULL) {
        exit(0);
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to initialize a queue
struct Queue* createQueue() {
    struct Queue* q = (struct Queue*)malloc(sizeof(struct Queue));
    if (q == NULL) {
        exit(0);
    }
    q->front = NULL;
    q->rear = NULL;
    return q;
}

// Function to append (enqueue) an element to the queue
void append(struct Queue* q, int data) {
    // TODO
    struct Node* newNode = createNode(data);
    if (newNode == NULL) return;

    if (q->rear == NULL) {
        q->front = newNode;
        q->rear = newNode;
    } else {
        q->rear->next = newNode;
        q->rear = newNode;
    }  
}

// Function to get the length of the queue
int length(struct Queue* q) {
    int count = 0;
    struct Node* temp = q->front;
    while (temp) {
        count++;
        temp = temp->next;
    }
    return count;
}

// Function to delete (dequeue) the first element from the queue
int deleteFirst(struct Queue* q) {
    // TODO
    
    int data;
    if (q->front == NULL) {
        return -1;
    }
    
    struct Node* temp = q->front;
    data = temp->data;
    q->front = q->front->next;
    
    if (q->front == NULL) {
        q->rear = NULL;
    }
    free(temp);
    return data;
}

// Function to print the queue for testing purposes
void printQueue(struct Queue* q) {
    struct Node* temp = q->front;
    while (temp) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}
